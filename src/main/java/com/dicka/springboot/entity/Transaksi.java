package com.dicka.springboot.entity;
// Generated Mar 31, 2017 6:54:57 PM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Transaksi generated by hbm2java
 */
@Entity
@Table(name="transaksi"
    ,catalog="db_hibernate"
)
public class Transaksi  implements java.io.Serializable {


     private Integer idtransaksi;
     private Account account;
     private Date tanggal;
     private Set<TransaksiDetil> transaksiDetils = new HashSet<TransaksiDetil>(0);

    public Transaksi() {
    }

	
    public Transaksi(Account account, Date tanggal) {
        this.account = account;
        this.tanggal = tanggal;
    }
    public Transaksi(Account account, Date tanggal, Set<TransaksiDetil> transaksiDetils) {
       this.account = account;
       this.tanggal = tanggal;
       this.transaksiDetils = transaksiDetils;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="idtransaksi", unique=true, nullable=false)
    public Integer getIdtransaksi() {
        return this.idtransaksi;
    }
    
    public void setIdtransaksi(Integer idtransaksi) {
        this.idtransaksi = idtransaksi;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="username", nullable=false)
    public Account getAccount() {
        return this.account;
    }
    
    public void setAccount(Account account) {
        this.account = account;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="tanggal", nullable=false, length=10)
    public Date getTanggal() {
        return this.tanggal;
    }
    
    public void setTanggal(Date tanggal) {
        this.tanggal = tanggal;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="transaksi")
    public Set<TransaksiDetil> getTransaksiDetils() {
        return this.transaksiDetils;
    }
    
    public void setTransaksiDetils(Set<TransaksiDetil> transaksiDetils) {
        this.transaksiDetils = transaksiDetils;
    }




}


